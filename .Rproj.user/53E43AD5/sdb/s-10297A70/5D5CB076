{
    "collab_server" : "",
    "contents" : "#' Test rmarkdown task\n#'\n#' This function takes a file, searches a kye_word line and then evaluate the first r chunk after the keyword. Then function compare ther result with the expected value.\n#' @param file an rmarkdown file or an r charactor vector.\n#' @param expectations an expected value.\n#' @param keyword a key_word to identify, where shuld be r chunk searched.\n#' @author George Moroz <agricolamz@gmail.com>\n#' @examples\n#' test_task(expectations = 2+2, file = test_1, keyword = \"### 1.1\")\n#' test_task(expectations = 2+3, file = test_1, keyword = \"### 1.1\")\n#' @export\n\ntest_task <- function(expectations, file, keyword) {\n# is file just a name or a whole file? ------------------------------------\n  if(length(file) == 1){\n    work <- readLines(file)\n  } else{\n    work <- file\n  }\n  work <- work[grep(keyword, work):length(work)]\n  start <- grep(\"```\\\\{r\", work)[1]+1\n  final <- grep(\"```\", work)[2]-1\n  identical(eval(parse(text=work[start:final])), expectations)}\n\n",
    "created" : 1489511406420.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4052831490",
    "id" : "5D5CB076",
    "lastKnownWriteTime" : 1489512091,
    "last_content_update" : 1489512091937,
    "path" : "~/_DATA/OneDrive1/_Work/github/markdown_check/AssignmentCheck/R/test_task.R",
    "project_path" : "R/test_task.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}