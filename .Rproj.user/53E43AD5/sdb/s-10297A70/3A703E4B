{
    "collab_server" : "",
    "contents" : "#' Test all tasks in rmarkdown file\n\n#' This function takes a file, searches all kye_words using key_word_prefix argument and then tests associated with all keywords r chunks. Then function compare the results with the expected value and return a dataframe containing file name, author, check results and number of corrected answers.\n#' @param file an rmarkdown file or an r charactor vector.\n#' @param expectations an expected value.\n#' @param keyword_prefix a common part of all keywords. By default is \"### \".\n#' @author George Moroz <agricolamz@gmail.com>\n#' @examples\n#' fit <- lm(mpg~cyl, mtcars)\n#' test_one_file(list(2+2, fit$coefficients), test_1)\n#' test_one_file(list(2+2, 42), test_1)\n#' @export\n\ntest_one_file <- function(expectations, file, keyword_prefix = \"### \"){\n  # is file just a name or a whole file? ------------------------------------\n  if(length(file) == 1){\n    work <- readLines(file)\n    file_name <- file\n  } else{\n    work <- file\n    file_name <- deparse(substitute(file))\n  }\n\n  author <- substring(work[grep(\"author\", work)],\n                      10,\n                      nchar(work[grep(\"author\", work)])-1)\n\n  keywords <- work[grep(keyword_prefix, work)]\n\n  checks <- unname(mapply(function(x, y){\n    test_task(file = work, keyword = x, expectations = y)\n  },\n  keywords, expectations))\n\n  results <- data.frame(t(data.frame(checks)))\n  names(results) <- keywords\n  rownames(results) <- NULL\n  results <- cbind(file_name, author, results)\n  results$results <- sum(unlist(results[, -1]))\n  results\n}\n",
    "created" : 1489511661439.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3530370580",
    "id" : "3A703E4B",
    "lastKnownWriteTime" : 1489511942,
    "last_content_update" : 1489511942263,
    "path" : "~/_DATA/OneDrive1/_Work/github/markdown_check/AssignmentCheck/R/test_one_file.R",
    "project_path" : "R/test_one_file.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}